---
import type { GetStaticPaths } from "astro"
import { getCollection, getEntry, render } from "astro:content"
import Layout from "@levino/shipyard-base/layouts/Page.astro"

export const getStaticPaths = (async () => {
  const beds = await getCollection("beds")
  const bedsWithPlants = await Promise.all(
    beds.map(async (bed) => {
      const plants = await Promise.all(
        bed.data.plants.map(async (plant) => {
          const plantEntry = await getEntry(plant)
          return plantEntry.data
        }),
      )
      return { ...bed, data: { ...bed.data, plants } }
    }),
  )
  return bedsWithPlants.map((bed) => ({
    params: {
      slug: bed.id.split("/").slice(1).join("/"),
      locale: bed.id.split("/")[0],
    },
    props: { entry: bed },
  }))
}) satisfies GetStaticPaths

const { entry } = Astro.props
//@ts-expect-error new "render" function does not like altered types
const { Content } = await render(entry)
---

<Layout>
  <div class="prose mx-auto">
    <Content />
    Pflanzen:
    <ul>
      {entry.data.plants.map((plant) => <li>{plant.name.latin}</li>)}
    </ul>
  </div>
</Layout>
