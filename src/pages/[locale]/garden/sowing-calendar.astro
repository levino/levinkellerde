---
import Layout from "@levino/shipyard-base/layouts/Page.astro"
import type { GetStaticPaths } from "astro"
import { prop, map, groupBy, path, flatten } from "ramda"
import { pipe } from "fp-ts/lib/function"
import { getCollection } from "astro:content"
import { MONTHS_DE, MONTHS_EN } from "@levino/shipyard-base"
export const getStaticPaths = (() => {
  return [
    {
      params: {
        locale: "de",
      },
    },
  ]
}) satisfies GetStaticPaths

const vegetables = await getCollection("vegetables").then((vegetables) =>
  vegetables.map(
    ({
      id,
      data: {
        sowing,
        name: { de: name },
      },
    }) => ({ sowing, name, link: `./vegetables/${id}` }),
  ),
)

const plants = await getCollection("plants", path(["data", "toSow"])).then(
  (plants) =>
    plants.map(
      ({
        id,
        data: {
          sowingTime,
          name: { latin: name },
        },
      }) => ({ sowing: sowingTime, name, link: `./plants/${id}` }),
    ),
)
const plantsBySowingMonth = pipe(
  vegetables.concat(plants),
  map((plant) => plant.sowing.map((sowing) => ({ ...plant, sowing }))),
  flatten,
  groupBy(prop("sowing")),
)
---

<Layout>
  <div class="container mx-auto">
    <h1 class="m-4 text-center text-xl">Aussaatkalender</h1>
    <table class="table table-xs">
      <thead>
        <tr>
          {
            MONTHS_DE.map((month) => (
              <th class="odd:bg-base-200 even:bg-base-100">{month}</th>
            ))
          }
        </tr>
      </thead>
      <tbody>
        <tr>
          {
            MONTHS_EN.map((month) => (
              <td class="align-top odd:bg-base-200 even:bg-base-100">
                <ul class="list-none">
                  {plantsBySowingMonth[month]?.map(({ name, link }) => (
                    <li class="py-1">
                      <a href={link}>{name}</a>
                    </li>
                  ))}
                </ul>
              </td>
            ))
          }
        </tr>
      </tbody>
    </table>
  </div>
</Layout>
